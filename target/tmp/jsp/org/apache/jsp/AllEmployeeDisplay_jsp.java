/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.40.v20210413
 * Generated at: 2022-01-18 05:28:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.ideas2it.employeemanagement.model.EmployeeVO;
import com.ideas2it.employeemanagement.model.AddressDTO;
import com.ideas2it.employeemanagement.model.ProjectDTO;
import java.util.List;
import java.util.ArrayList;

public final class AllEmployeeDisplay_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.ideas2it.employeemanagement.model.AddressDTO");
    _jspx_imports_classes.add("com.ideas2it.employeemanagement.model.EmployeeVO");
    _jspx_imports_classes.add("com.ideas2it.employeemanagement.model.ProjectDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>All Employee display</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"style.css\">\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <header class=\"header1\">\n");
      out.write("    <div class=\"row\">\n");
      out.write("    <div class=\"logo\" style = \"float: left;\" >\n");
      out.write("    <img alt=\"Logo\" src=\"logo.png\">\n");
      out.write("    <h1>Employee Management System</h1>\n");
      out.write("    </div>\n");
      out.write("        <ul class=\"main-nav\">\n");
      out.write("        <li> <a href = \"EmployeeMenu.jsp\">Employee</a><br></li>\n");
      out.write("        <li> <a href = \"ProjectMenu.jsp\">Project</a><br></li>\n");
      out.write("        </ul>\n");
      out.write("        </div>\n");
      out.write("    </header>\n");
      out.write("    <h2>Employee list</h2>\n");
      out.write("<div style=\" display:block; font-size:20px;text-align:left;\">\n");
      out.write("    ");
List<EmployeeVO> employees = (ArrayList<EmployeeVO>)request.getAttribute("Employees");
      out.write("\n");
      out.write("        ");
if ((null == employees) || (employees.isEmpty())) {
      out.write("\n");
      out.write("        Sorry..Nothing to show!<br>  \n");
      out.write("        ");
} else {
      out.write("\n");
      out.write("        ");
for (EmployeeVO employeeVO:employees){ 
      out.write("\n");
      out.write("       <table cellPadding=\"5\" style=\"margin: 0 auto;text-align:left;\">\n");
      out.write("        <tr>\n");
      out.write("          <td>Employee ID:");
      out.print(employeeVO.getEmployeeId());
      out.write("</td>\n");
      out.write("          <td>Email:");
      out.print(employeeVO.getEmail());
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("          <td>Name:");
      out.print(employeeVO.getName());
      out.write("</td>\n");
      out.write("          <td>Date Of Birth :");
      out.print(employeeVO.getDateOfBirth());
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("          <td>Mobile number:");
      out.print(employeeVO.getMobileNumber());
      out.write("</td>\n");
      out.write("          <td>Salary:");
      out.print(employeeVO.getSalary());
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("        ");
if ((null != employeeVO.getaddressesDTO()) && (!employeeVO.getaddressesDTO().isEmpty())) {
      out.write("\n");
      out.write("        <td>Address:</td>\n");
      out.write("        <td> <table border=\"1\" style=\"margin: 0px auto;\">\n");
      out.write("            <tr>\n");
      out.write("              <th>Door Number</th>\n");
      out.write("              <th>Street</th>\n");
      out.write("              <th>City</th>\n");
      out.write("              <th>State</th>\n");
      out.write("              <th>Country</th>\n");
      out.write("              <th>Pin code</th>\n");
      out.write("            </tr>\n");
      out.write("        ");
for (AddressDTO address:employeeVO.getaddressesDTO()){ 
      out.write("\n");
      out.write("            <tr>\n");
      out.write("              <td>");
      out.print(address.getDoorNumber() );
      out.write("</td>\n");
      out.write("              <td>");
      out.print(address.getStreet() );
      out.write("</td>\n");
      out.write("              <td>");
      out.print(address.getCity() );
      out.write("</td>\n");
      out.write("              <td>");
      out.print(address.getState() );
      out.write("</td>\n");
      out.write("              <td>");
      out.print(address.getCountry() );
      out.write("</td>\n");
      out.write("              <td>");
      out.print(address.getPinCode() );
      out.write("</td>\n");
      out.write("            </tr>\n");
      out.write("        ");
} 
      out.write("\n");
      out.write("        </table></td>\n");
      out.write("        ");
} 
      out.write("\n");
      out.write("        </tr>\n");
      out.write("        ");
if ((null != employeeVO.getProjectsDTO()) && (!employeeVO.getProjectsDTO().isEmpty())) {
      out.write("\n");
      out.write("        <tr>\n");
      out.write("        <td>Projects:\n");
      out.write("        </td>\n");
      out.write("        <td><table border=\"1\" style=\"margin: 0px auto;\">\n");
      out.write("            <tr>\n");
      out.write("              <th>Project Id</th>\n");
      out.write("              <th>Project Name</th>\n");
      out.write("              <th>Manager</th>\n");
      out.write("              <th>Start Date</th>\n");
      out.write("              <th>Domain</th>\n");
      out.write("            </tr>\n");
      out.write("        ");

        for(ProjectDTO project:employeeVO.getProjectsDTO()){
      out.write("\n");
      out.write("            <tr>\n");
      out.write("              <td>");
      out.print(project.getProjectId() );
      out.write("</td>\n");
      out.write("              <td>");
      out.print(project.getName() );
      out.write("</td>\n");
      out.write("              <td>");
      out.print(project.getManager() );
      out.write("</td>\n");
      out.write("              <td>");
      out.print(project.getStartDate() );
      out.write("</td>\n");
      out.write("              <td>");
      out.print(project.getDomainName() );
      out.write("</td>\n");
      out.write("            </tr>\n");
      out.write("        ");
} 
      out.write("\n");
      out.write("        </table>\n");
      out.write("        </td>\n");
      out.write("        </tr>\n");
      out.write("        ");
} 
      out.write("\n");
      out.write("        <tr><td></td></tr>\n");
      out.write("        <tr><td></td></tr>\n");
      out.write("        </table>\n");
      out.write("        ");
} 
      out.write("   \n");
      out.write("        ");
} 
      out.write("\n");
      out.write("     <button style=\"margin:auto 50%;\"><a href=\"ViewEmployee.jsp\">Back</a></button>\n");
      out.write("     </div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
